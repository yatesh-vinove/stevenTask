{"ast":null,"code":"var _jsxFileName = \"/home/yateshchhabra/Project/PharmaForceIq/react-task/src/components/dashboard/charts/heatMapChart.js\";\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeatMapChart = () => {\n  const options = {\n    chart: {\n      type: 'heatmap'\n    },\n    dataLabels: {\n      enabled: false\n    },\n    plotOptions: {\n      heatmap: {\n        colorScale: {\n          ranges: [{\n            from: 1,\n            to: 36,\n            color: '#FEDF89' // Range 1-36 color\n          }, {\n            from: 36,\n            to: 70,\n            color: '#F79009' // Range 36-70 color\n          }, {\n            from: 70,\n            to: 96,\n            color: '#B54708' // Range 70-96 color\n          }, {\n            from: 96,\n            to: 100,\n            color: '#7A2E0E' // Range 96-100 color\n          }]\n        }\n      }\n    },\n\n    xaxis: {\n      categories: ['', '', '', '', '', '', '', '', '', '']\n    }\n  };\n  const generateData = () => {\n    const data = [];\n    for (let i = 1; i <= 10; i++) {\n      const row = [];\n      for (let j = 1; j <= 10; j++) {\n        row.push(i * 10 + j);\n      }\n      data.push(row);\n    }\n    return data;\n  };\n  const data = generateData();\n  const series = data.map(row => {\n    return {\n      data: row.map(value => ({\n        value: value\n      }))\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '200px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      options: options,\n      series: series,\n      type: \"heatmap\",\n      height: \"350\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_c = HeatMapChart;\nexport default HeatMapChart;\nvar _c;\n$RefreshReg$(_c, \"HeatMapChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","HeatMapChart","options","chart","type","dataLabels","enabled","plotOptions","heatmap","colorScale","ranges","from","to","color","xaxis","categories","generateData","data","i","row","j","push","series","map","value","style","maxWidth","children","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/yateshchhabra/Project/PharmaForceIq/react-task/src/components/dashboard/charts/heatMapChart.js"],"sourcesContent":["import React from 'react';\nimport Chart from 'react-apexcharts';\n\nconst HeatMapChart = () => {\n  const options = {\n    chart: {\n      type: 'heatmap',\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    plotOptions: {\n      heatmap: {\n        colorScale: {\n          ranges: [\n            {\n              from: 1,\n              to: 36,\n              color: '#FEDF89', // Range 1-36 color\n            },\n            {\n              from: 36,\n              to: 70,\n              color: '#F79009', // Range 36-70 color\n            },\n            {\n              from: 70,\n              to: 96,\n              color: '#B54708', // Range 70-96 color\n            },\n            {\n              from: 96,\n              to: 100,\n              color: '#7A2E0E', // Range 96-100 color\n            },\n          ],\n        },\n      },\n    },\n    xaxis: {\n      categories: ['', '', '', '', '', '', '', '', '', ''],\n    },\n  };\n\n  const generateData = () => {\n    const data = [];\n    for (let i = 1; i <= 10; i++) {\n      const row = [];\n      for (let j = 1; j <= 10; j++) {\n        row.push(i * 10 + j);\n      }\n      data.push(row);\n    }\n    return data;\n  };\n\n  const data = generateData();\n\n  const series = data.map((row) => {\n    return {\n      data: row.map((value) => ({ value: value })),\n    };\n  });\n\n  return (\n    <div style={{ maxWidth: '200px' }}>\n      <Chart options={options} series={series} type=\"heatmap\" height=\"350\" />\n    </div>\n  );\n};\n\nexport default HeatMapChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,MAAMC,OAAO,GAAG;IACdC,KAAK,EAAE;MACLC,IAAI,EAAE;IACR,CAAC;IACDC,UAAU,EAAE;MACVC,OAAO,EAAE;IACX,CAAC;IACDC,WAAW,EAAE;MACXC,OAAO,EAAE;QACPC,UAAU,EAAE;UACVC,MAAM,EAAE,CACN;YACEC,IAAI,EAAE,CAAC;YACPC,EAAE,EAAE,EAAE;YACNC,KAAK,EAAE,SAAS,CAAE;UACpB,CAAC,EACD;YACEF,IAAI,EAAE,EAAE;YACRC,EAAE,EAAE,EAAE;YACNC,KAAK,EAAE,SAAS,CAAE;UACpB,CAAC,EACD;YACEF,IAAI,EAAE,EAAE;YACRC,EAAE,EAAE,EAAE;YACNC,KAAK,EAAE,SAAS,CAAE;UACpB,CAAC,EACD;YACEF,IAAI,EAAE,EAAE;YACRC,EAAE,EAAE,GAAG;YACPC,KAAK,EAAE,SAAS,CAAE;UACpB,CAAC;QAEL;MACF;IACF,CAAC;;IACDC,KAAK,EAAE;MACLC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IACrD;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,IAAI,GAAG,EAAE;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC5B,MAAMC,GAAG,GAAG,EAAE;MACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC5BD,GAAG,CAACE,IAAI,CAACH,CAAC,GAAG,EAAE,GAAGE,CAAC,CAAC;MACtB;MACAH,IAAI,CAACI,IAAI,CAACF,GAAG,CAAC;IAChB;IACA,OAAOF,IAAI;EACb,CAAC;EAED,MAAMA,IAAI,GAAGD,YAAY,CAAC,CAAC;EAE3B,MAAMM,MAAM,GAAGL,IAAI,CAACM,GAAG,CAAEJ,GAAG,IAAK;IAC/B,OAAO;MACLF,IAAI,EAAEE,GAAG,CAACI,GAAG,CAAEC,KAAK,KAAM;QAAEA,KAAK,EAAEA;MAAM,CAAC,CAAC;IAC7C,CAAC;EACH,CAAC,CAAC;EAEF,oBACExB,OAAA;IAAKyB,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAQ,CAAE;IAAAC,QAAA,eAChC3B,OAAA,CAACF,KAAK;MAACI,OAAO,EAAEA,OAAQ;MAACoB,MAAM,EAAEA,MAAO;MAAClB,IAAI,EAAC,SAAS;MAACwB,MAAM,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEV,CAAC;AAACC,EAAA,GAlEIhC,YAAY;AAoElB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}